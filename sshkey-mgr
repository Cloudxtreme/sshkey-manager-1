#!/bin/bash
mgr_dir=`cd $(dirname $0);pwd`
key_dir="$mgr_dir/sshkey"


source $mgr_dir/lib.sh


function Usage() {
    echo "$0 { list | gen <name> | deploy <name> | restore <name> | upload <name> <path> | update <path> <name>}"
    exit 1
}

function List() {
    cd $key_dir/
    number=`ls -d */ | wc -l`
    echo "Totle:" $number
    for key in `ls -d */`
    do
        tree $key
    done
}

function Generate_key() {
    name="$1"
    mkdir -p $key_dir/$name

    hint "generate ssh key"
    ssh-keygen -t rsa -f $key_dir/$name/$name
    
    hint "generate ssh configuration"
    configuration="$key_dir/$name/$name.conf"

    read -p "User name: " user
    read -p "server ip: " ip

    cp $key_dir/config_tem $configuration

    sed -i "s/IP/$ip/g" $configuration
    sed -i "s/NAME/$name/g" $configuration
    sed -i "s/USER/$user/g" $configuration
    sed -i "s+PATH+$key_dir/$name/$name+g" $configuration
}

function Deploy() {
    name="$1"
    ip=`cat $key_dir/$name/$name.conf | grep Hostname | awk -F " " '{print $2}'`

    # create ~/.ssh/config.d if there is no such directory
    if [ ! -d "$HOME/.ssh/config.d" ];then
        hint "create directory : ~/.ssh/config.d"
        mkdir ~/.ssh/config.d
    fi

    # add "Include config.d/*"to ~/.ssh/config if there is no such line
    if [ -z "$(cat $HOME/.ssh/config | grep 'Include config.d/*')" ];then 
        sed -i '1 i\Include config.d/*' $HOME/.ssh/config
    fi

    # authority
    hint "authority whether host exists"
    cat ~/.ssh/config | grep "Host $name" && \
    echo "The machine ( $name ) is already exist in ~/.ssh/config " && \
    exit 1

    ls ~/.ssh/config.d | grep $name.conf && \
    echo "The machine ( $name ) configuration is already exist in ~/.ssh/config.d/" && \
    exit 1

    echo "No machine named $name"

    # add config to ~/.ssh/config.d
    hint "Copy configuration to ~/.ssh/config.d"
    cp $key_dir/$name/$name.conf $HOME/.ssh/config.d/
    ls $HOME/.ssh/config.d/ | grep $name.conf
    
    # scp pub key to server
    hint "sent public key to server"
    ssh-keygen -f "/home/develop_pan/.ssh/known_hosts" -R $name
    ssh-copy-id -i $key_dir/$name/$name $name
}

function Restore() {
    name="$1"

    hint "remove the public in server"
    pub_key=`cat $key_dir/$name/$name.pub`
    ssh $name -C "sed -i 's#$pub_key# #' ~/.ssh/authorized_keys"

    hint "Remove $name.conf in ~/.ssh/config.d/"
    rm $HOME/.ssh/config.d/$name.conf
}

function Upload() {
    key_name="$1"
    direction="$2"
    if [ ! -d $key_dir/$key_name ];then
        echo "No such key!"
        exit 1
    fi
    scp -r $key_dir/$key_name $direction
}

function Update() {
    direction="$1"
    name="$2"

    host="$(cut -d':' -f1 <<< $direction)"
    path="$(cut -d':' -f2 <<< $direction)"
    
    scp -r $direction/$name $key_dir/
}

case "$1" in 
    gen)
        Parameter_judge 2 $#
        Generate_key $2
        ;;

    deploy)
        Parameter_judge 2 $#
        Deploy $2
        ;;

    restore)
        Parameter_judge 2 $#
        Restore $2
        ;;

    list)
        Parameter_judge 1 $#
        List
        ;;

    upload)
        Parameter_judge 3 $#
        Upload $2 $3
        ;;

    update)
        Parameter_judge 3 $#
        Update $2 $3
        ;;

    *)
        Usage
        ;;
esac



